// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Odpelji_me.Data;

#nullable disable

namespace Odpelji_me.Migrations
{
    [DbContext(typeof(Odpelji_meContext))]
    partial class Odpelji_meContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OdpeljiMe.Models.Mnenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvtomobilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<int>("UporabnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvtomobilId");

                    b.HasIndex("UporabnikId");

                    b.ToTable("Mnenje");
                });

            modelBuilder.Entity("OdpeljiMe.Models.Placilo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NacinPlacila")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Znesek")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RezervacijaId")
                        .IsUnique();

                    b.ToTable("Placilo");
                });

            modelBuilder.Entity("OdpeljiMe.Models.Rezervacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvtomobilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumKonca")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZacetka")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UporabnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvtomobilId");

                    b.HasIndex("UporabnikId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("OdpeljiMe.Models.Uporabnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Geslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vloga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uporabnik");
                });

            modelBuilder.Entity("OpremiSe.Models.Avtomobil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CenaNaDan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Leto")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrskaStevilka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Znamka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Avtomobil");
                });

            modelBuilder.Entity("OdpeljiMe.Models.Mnenje", b =>
                {
                    b.HasOne("OpremiSe.Models.Avtomobil", "Avtomobil")
                        .WithMany("Mnenja")
                        .HasForeignKey("AvtomobilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdpeljiMe.Models.Uporabnik", "Uporabnik")
                        .WithMany("Mnenja")
                        .HasForeignKey("UporabnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avtomobil");

                    b.Navigation("Uporabnik");
                });

            modelBuilder.Entity("OdpeljiMe.Models.Placilo", b =>
                {
                    b.HasOne("OdpeljiMe.Models.Rezervacija", "Rezervacija")
                        .WithOne("Placilo")
                        .HasForeignKey("OdpeljiMe.Models.Placilo", "RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("OdpeljiMe.Models.Rezervacija", b =>
                {
                    b.HasOne("OpremiSe.Models.Avtomobil", "Avtomobil")
                        .WithMany("Rezervacije")
                        .HasForeignKey("AvtomobilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdpeljiMe.Models.Uporabnik", "Uporabnik")
                        .WithMany("Rezervacije")
                        .HasForeignKey("UporabnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avtomobil");

                    b.Navigation("Uporabnik");
                });

            modelBuilder.Entity("OdpeljiMe.Models.Rezervacija", b =>
                {
                    b.Navigation("Placilo")
                        .IsRequired();
                });

            modelBuilder.Entity("OdpeljiMe.Models.Uporabnik", b =>
                {
                    b.Navigation("Mnenja");

                    b.Navigation("Rezervacije");
                });

            modelBuilder.Entity("OpremiSe.Models.Avtomobil", b =>
                {
                    b.Navigation("Mnenja");

                    b.Navigation("Rezervacije");
                });
#pragma warning restore 612, 618
        }
    }
}
